pipeline {
    agent any

    environment {
        APP_NAME = "my-next-test-app"
        BUILD_DIR = "next-app"
        DEPLOY_USER = "deploy"
        DEPLOY_HOST = "192.168.206.10"
        DEPLOY_PATH = "/var/www/html/${APP_NAME}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                // credentialsId: 'github-credentials',
                url: 'https://github.com/munirmahmud/my-next-test-app.git'
            }
        }

        stage('Install & Build') {
            steps {
                sh '''
                    npm install
                    npm run build
                '''
            }
        }

        stage('Prepare Artifact') {
            steps {
                sh '''
                    rm -rf ${BUILD_DIR}
                    mkdir ${BUILD_DIR}
                    cp -r .next public package.json ${BUILD_DIR}
                    pwd
                '''
            }
        }

        stage('Deploy to Production') {
            steps {
                sh """
                    # Create directory and set ownership
                    ssh ${DEPLOY_USER}@${DEPLOY_HOST} '
                        mkdir -p ${DEPLOY_PATH} &&
                        sudo chown -R ${DEPLOY_USER}. ${DEPLOY_PATH}
                    '

                    # Sync files to server
                    rsync -avhP -e "ssh -o StrictHostKeyChecking=no" --exclude='.git/' . ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}
                    #rsync -avz --delete ${BUILD_DIR}/ ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}

                    # Final setup on the server
                    ssh ${SSH_USER}@${DEPLOY_SERVER} <<'EOF'
                        sudo chown -R www-data. ${DEPLOY_PATH}
                        #cd ${DEPLOY_PATH}
                        #sudo -u www-data composer install --ignore-platform-reqs
                        #sudo -u www-data php artisan config:clear
                        #sudo -u www-data php artisan cache:clear
                        #sudo -u www-data php artisan migrate
                    EOF
                """
            }
        }
                    // ssh ${DEPLOY_USER}@${DEPLOY_HOST} 'rm -rf ${DEPLOY_PATH} && mkdir -p ${DEPLOY_PATH}'
                    // scp -r ${BUILD_DIR}/* ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}

        stage('Restart PM2 on Production') {
            steps {
                sh """
                    ssh ${DEPLOY_USER}@${DEPLOY_HOST} '
                        cd ${DEPLOY_PATH} &&
                        pm2 delete ${APP_NAME} || true &&
                        pm2 start npm --name "${APP_NAME}" -- start &&
                        pm2 save
                    '
                """
            }
        }
    }


    post {
        success {
            echo 'Deployment successful!'
        }

        failure {
            echo 'Deployment failed!'
        }

        always {
            // Clean workspace after pipeline finishes
            cleanWs()
        }
    }
}
